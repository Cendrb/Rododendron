// Date: 6. 7. 2015 13:45:54
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX


package com.cendrb.rododendron.client.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelDildo extends ModelBase {
    boolean mirror = false;
    //fields
    ModelRenderer Base1;
    ModelRenderer Base2;
    ModelRenderer Base3;
    ModelRenderer Base4;
    ModelRenderer Base5;
    ModelRenderer Dickehead6;
    ModelRenderer Ball1;
    ModelRenderer Ball2;

    public ModelDildo() {
        textureWidth = 128;
        textureHeight = 64;

        Base1 = new ModelRenderer(this, 0, 0);
        Base1.addBox(0F, 0F, 0F, 16, 9, 16);
        Base1.setRotationPoint(-8F, 17F, -8F);
        Base1.setTextureSize(128, 64);
        Base1.mirror = mirror;
        setRotation(Base1, 0.0872665F, 0F, 0F);
        Base2 = new ModelRenderer(this, 0, 0);
        Base2.addBox(0F, 0F, 0F, 12, 8, 12);
        Base2.setRotationPoint(-6F, 10F, -6F);
        Base2.setTextureSize(128, 64);
        Base2.mirror = mirror;
        setRotation(Base2, 0.0872665F, 0F, 0F);
        Base3 = new ModelRenderer(this, 0, 0);
        Base3.addBox(0F, 0F, 0F, 8, 9, 8);
        Base3.setRotationPoint(-4F, 2F, -5F);
        Base3.setTextureSize(128, 64);
        Base3.mirror = mirror;
        setRotation(Base3, 0.1047198F, 0F, 0F);
        Base4 = new ModelRenderer(this, 0, 0);
        Base4.addBox(0F, 0F, 0F, 6, 10, 6);
        Base4.setRotationPoint(-3F, -7F, -5F);
        Base4.setTextureSize(128, 64);
        Base4.mirror = mirror;
        setRotation(Base4, 0.1396263F, 0F, 0F);
        Base5 = new ModelRenderer(this, 0, 0);
        Base5.addBox(0F, -1F, 0F, 4, 12, 4);
        Base5.setRotationPoint(-2F, -17F, -5.5F);
        Base5.setTextureSize(128, 64);
        Base5.mirror = mirror;
        setRotation(Base5, 0.1396263F, 0F, 0F);
        Dickehead6 = new ModelRenderer(this, 0, 24);
        Dickehead6.addBox(0F, 0F, 0F, 2, 11, 2);
        Dickehead6.setRotationPoint(-1F, -28F, -6.666667F);
        Dickehead6.setTextureSize(128, 64);
        Dickehead6.setTextureOffset(0, 24);
        Dickehead6.mirror = mirror;
        setRotation(Dickehead6, 0.1919862F, 0F, 0F);
        Ball1 = new ModelRenderer(this, 0, 38);
        Ball1.addBox(0F, 0F, 0F, 14, 12, 14);
        Ball1.setRotationPoint(-19F, 9F, -7F);
        Ball1.setTextureSize(128, 64);
        Ball1.setTextureOffset(0, 38);
        Ball1.mirror = mirror;
        setRotation(Ball1, 0.0872665F, 0F, 0.1745329F);
        Ball2 = new ModelRenderer(this, 0, 38);
        Ball2.addBox(0F, 0F, 0F, 14, 12, 14);
        Ball2.setRotationPoint(5F, 12F, -7F);
        Ball2.setTextureSize(128, 64);
        Ball2.setTextureOffset(0, 38);
        Ball2.mirror = mirror;
        setRotation(Ball2, 0.0872665F, 0F, -0.1745329F);
    }

    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
        super.render(entity, f, f1, f2, f3, f4, f5);
        setRotationAngles(f, f1, f2, f3, f4, f5, entity);
        Base1.render(f5);
        Base2.render(f5);
        Base3.render(f5);
        Base4.render(f5);
        Base5.render(f5);
        Dickehead6.render(f5);
        Ball1.render(f5);
        Ball2.render(f5);
    }

    private void setRotation(ModelRenderer model, float x, float y, float z) {
        model.rotateAngleX = x;
        model.rotateAngleY = y;
        model.rotateAngleZ = z;
    }

    public void setRotationAngles(float time, float distance, float f2, float f3, float f4, float f5, Entity entity) {
        super.setRotationAngles(time, distance, f2, f3, f4, f5, entity);
        float baseRotation = MathHelper.cos(time * 0.6662F) * 1.4F * distance;
        Ball1.rotateAngleX = baseRotation;
        Ball2.rotateAngleX = -baseRotation;
        Base1.rotateAngleY = baseRotation;
        Base2.rotateAngleY = baseRotation;
        Base3.rotateAngleY = baseRotation;
        Base4.rotateAngleY = baseRotation;
        Base5.rotateAngleY = baseRotation;
        Dickehead6.rotateAngleY = baseRotation;
    }



}
